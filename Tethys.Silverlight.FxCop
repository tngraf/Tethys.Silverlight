<?xml version="1.0" encoding="utf-8"?>
<FxCopProject Version="10.0" Name="Tethys.Silverlight">
 <ProjectOptions>
  <SharedProject>True</SharedProject>
  <Stylesheet Apply="False">c:\program files (x86)\microsoft fxcop 1.36\Xml\FxCopReport.xsl</Stylesheet>
  <SaveMessages>
   <Project Status="Active, Excluded" NewOnly="False" />
   <Report Status="Active" NewOnly="False" />
  </SaveMessages>
  <ProjectFile Compress="True" DefaultTargetCheck="True" DefaultRuleCheck="True" SaveByRuleGroup="" Deterministic="True" />
  <EnableMultithreadedLoad>True</EnableMultithreadedLoad>
  <EnableMultithreadedAnalysis>True</EnableMultithreadedAnalysis>
  <SourceLookup>True</SourceLookup>
  <AnalysisExceptionsThreshold>10</AnalysisExceptionsThreshold>
  <RuleExceptionsThreshold>1</RuleExceptionsThreshold>
  <Spelling Locale="en-US" />
  <OverrideRuleVisibilities>False</OverrideRuleVisibilities>
  <CustomDictionaries SearchFxCopDir="True" SearchUserProfile="True" SearchProjectDir="True" />
  <SearchGlobalAssemblyCache>False</SearchGlobalAssemblyCache>
  <DeadlockDetectionTimeout>120</DeadlockDetectionTimeout>
  <IgnoreGeneratedCode>False</IgnoreGeneratedCode>
 </ProjectOptions>
 <Targets>
  <AssemblyReferenceDirectories>
   <Directory>$(ProjectDir)/Tethys.Silverlight.WPF/bin/Debug/</Directory>
   <Directory>$(ProjectDir)/TgLib.WP7/Bin/Debug/</Directory>
   <Directory>$(ProjectDir)/TgLib.WP7.Logging/Bin/Debug/</Directory>
  </AssemblyReferenceDirectories>
  <Target Name="$(ProjectDir)/Export/release/net45/Tethys.Silverlight.WPF.dll" Analyze="True" AnalyzeAllChildren="True" />
 </Targets>
 <Rules>
  <RuleFiles>
   <RuleFile Name="$(FxCopDir)\Rules\DesignRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\GlobalizationRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\InteroperabilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\MobilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\NamingRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\PerformanceRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\PortabilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\SecurityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\UsageRules.dll" Enabled="True" AllRulesEnabled="True" />
  </RuleFiles>
  <Groups />
  <Settings />
 </Rules>
 <FxCopReport Version="10.0">
  <Namespaces>
   <Namespace Name="Tethys.Silverlight.Config">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Excluded" Created="2013-03-29 21:34:48Z">
      <Issue>
       <Item>Tethys.Silverlight.Config</Item>
      </Issue>
      <Notes>
       <User Name="Thomas">
        <Note Id="2" />
       </User>
      </Notes>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Tethys.Silverlight.Controls">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Excluded" Created="2013-03-29 21:34:48Z">
      <Issue>
       <Item>Tethys.Silverlight.Controls</Item>
      </Issue>
      <Notes>
       <User Name="Thomas">
        <Note Id="2" />
       </User>
      </Notes>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Tethys.Silverlight.Diagnostics">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Excluded" Created="2013-03-29 21:34:48Z">
      <Issue>
       <Item>Tethys.Silverlight.Diagnostics</Item>
      </Issue>
      <Notes>
       <User Name="Thomas">
        <Note Id="2" />
       </User>
      </Notes>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Tethys.Silverlight.Extensions">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Excluded" Created="2013-03-29 21:34:48Z">
      <Issue>
       <Item>Tethys.Silverlight.Extensions</Item>
      </Issue>
      <Notes>
       <User Name="Thomas">
        <Note Id="2" />
       </User>
      </Notes>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Tethys.Silverlight.Helper">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2015-01-04 15:00:05Z">
      <Issue>
       <Item>Tethys.Silverlight.Helper</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Tethys.Silverlight.Media">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Excluded" Created="2013-03-29 21:34:48Z">
      <Issue>
       <Item>Tethys.Silverlight.Media</Item>
      </Issue>
      <Notes>
       <User Name="Thomas">
        <Note Id="2" />
       </User>
      </Notes>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Tethys.Silverlight.MVVM">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2015-01-04 15:00:05Z">
      <Issue>
       <Item>Tethys.Silverlight.MVVM</Item>
      </Issue>
     </Message>
     <Message Id="MVVM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2013-03-29 21:34:48Z">
      <Issue Name="Namespace">
       <Item>MVVM</Item>
       <Item>Tethys.Silverlight.MVVM</Item>
       <Item>Mvvm</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Tethys.Silverlight.Resources">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2015-01-04 15:00:05Z">
      <Issue>
       <Item>Tethys.Silverlight.Resources</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Tethys.Silverlight.Support">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2015-01-04 15:00:05Z">
      <Issue>
       <Item>Tethys.Silverlight.Support</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
  </Namespaces>
  <Targets>
   <Target Name="$(ProjectDir)/Export/release/net45/Tethys.Silverlight.WPF.dll">
    <Modules>
     <Module Name="tethys.silverlight.wpf.dll">
      <Messages>
       <Message TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824" Created="2013-03-29 21:34:48Z">
        <Issue>
         <Item>'Tethys.Silverlight.WPF.dll'</Item>
        </Issue>
       </Message>
       <Message Id="WPF" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Excluded" Created="2013-03-29 21:34:48Z">
        <Issue Name="Assembly">
         <Item>WPF</Item>
         <Item>'Tethys.Silverlight.WPF.dll'</Item>
         <Item>Wpf</Item>
        </Issue>
        <Notes>
         <User Name="Thomas">
          <Note Id="0" />
         </User>
        </Notes>
       </Message>
      </Messages>
      <Namespaces>
       <Namespace Name="Tethys.Silverlight.Config">
        <Types>
         <Type Name="AppConfigBase">
          <Members>
           <Member Name="#AppConfigFilename">
            <Messages>
             <Message Id="Filename" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Created="2013-03-29 21:34:48Z">
              <Issue Name="MemberShouldBeCompoundWord">
               <Item>Filename</Item>
               <Item>'AppConfigBase.AppConfigFilename'</Item>
               <Item>FileName</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#CheckPathExists(System.String)">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2013-03-29 21:34:48Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'AppConfigBase.CheckPathExists(string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetConfigFilename()">
            <Messages>
             <Message Id="Filename" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Created="2013-03-29 21:34:48Z">
              <Issue Name="MemberShouldBeCompoundWord">
               <Item>Filename</Item>
               <Item>'AppConfigBase.GetConfigFilename()'</Item>
               <Item>FileName</Item>
              </Issue>
             </Message>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2013-03-29 21:34:48Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'AppConfigBase.GetConfigFilename()'</Item>
              </Issue>
             </Message>
             <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Created="2013-03-29 21:34:48Z">
              <Issue>
               <Item>'AppConfigBase.GetConfigFilename()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Tethys.Silverlight.Controls">
        <Types>
         <Type Name="PasswordHelper">
          <Members>
           <Member Name="#Password">
            <Messages>
             <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Created="2015-01-04 15:00:05Z">
              <Issue Name="SameType">
               <Item>'PasswordHelper.Password'</Item>
               <Item>'PasswordHelper.GetPassword(DependencyObject)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="TreeViewItemExtensions">
          <Members>
           <Member Name="#GetParent(System.Windows.Controls.TreeViewItem)">
            <Messages>
             <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2015-01-04 15:00:05Z">
              <Issue Name="Local">
               <Item>'parent'</Item>
               <Item>'TreeViewItem'</Item>
               <Item>'TreeViewItemExtensions.GetParent(TreeViewItem)'</Item>
               <Item>isint</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Tethys.Silverlight.Converter">
        <Types>
         <Type Name="DoubleToColorConverter">
          <Members>
           <Member Name="#GetEnumNames`1()">
            <Messages>
             <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Created="2015-01-04 15:00:05Z">
              <Issue>
               <Item>'DoubleToColorConverter.GetEnumNames&lt;T&gt;()'</Item>
               <Item>'T'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetEnumValues`2()">
            <Messages>
             <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Created="2015-01-04 15:00:05Z">
              <Issue>
               <Item>'DoubleToColorConverter.GetEnumValues&lt;T1, T2&gt;()'</Item>
               <Item>'T1'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="GridLengthConverter">
          <Members>
           <Member Name="#ConvertFromString(System.String)">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2013-03-29 21:34:48Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'GridLengthConverter.ConvertFromString(string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="StringNullOrEmptyToVisibilityConverter">
          <Members>
           <Member Name="#Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <Messages>
             <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2013-03-29 21:34:48Z">
              <Issue Name="Parameter">
               <Item>'value'</Item>
               <Item>'string'</Item>
               <Item>'StringNullOrEmptyToVisibilityConverter.Convert(object, Type, object, CultureInfo)'</Item>
               <Item>isint</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="StringToVisibilityConverter">
          <Members>
           <Member Name="#Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <Messages>
             <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2013-03-29 21:34:48Z">
              <Issue Name="Parameter">
               <Item>'value'</Item>
               <Item>'string'</Item>
               <Item>'StringToVisibilityConverter.Convert(object, Type, object, CultureInfo)'</Item>
               <Item>castclass</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="UriToImageConverter">
          <Members>
           <Member Name="#Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <Messages>
             <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2013-03-29 21:34:48Z">
              <Issue Name="Parameter">
               <Item>'value'</Item>
               <Item>'Uri'</Item>
               <Item>'UriToImageConverter.Convert(object, Type, object, CultureInfo)'</Item>
               <Item>castclass</Item>
              </Issue>
              <Issue Name="Parameter">
               <Item>'value'</Item>
               <Item>'string'</Item>
               <Item>'UriToImageConverter.Convert(object, Type, object, CultureInfo)'</Item>
               <Item>castclass</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Tethys.Silverlight.Cryptography">
        <Types>
         <Type Name="HashSupport">
          <Members>
           <Member Name="#Decode(System.UInt32[],System.Int32,System.Byte[],System.Int32)">
            <Messages>
             <Message Id="input" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2013-03-29 21:34:48Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'input'</Item>
               <Item>'HashSupport.Decode(uint[], int, byte[], int)'</Item>
              </Issue>
             </Message>
             <Message Id="len" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2013-03-29 21:34:48Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'len'</Item>
               <Item>'HashSupport.Decode(uint[], int, byte[], int)'</Item>
              </Issue>
             </Message>
             <Message Id="output" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2013-03-29 21:34:48Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'output'</Item>
               <Item>'HashSupport.Decode(uint[], int, byte[], int)'</Item>
              </Issue>
             </Message>
             <Message Id="outputOffset" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2013-03-29 21:34:48Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'outputOffset'</Item>
               <Item>'HashSupport.Decode(uint[], int, byte[], int)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#MemCpy(System.Byte[],System.Byte[],System.Int32)">
            <Messages>
             <Message Id="Cpy" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-03-29 21:34:48Z">
              <Issue Name="Member">
               <Item>Cpy</Item>
               <Item>'HashSupport.MemCpy(byte[], byte[], int)'</Item>
              </Issue>
             </Message>
             <Message Id="Mem" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-03-29 21:34:48Z">
              <Issue Name="Member">
               <Item>Mem</Item>
               <Item>'HashSupport.MemCpy(byte[], byte[], int)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#MemCpy(System.Byte[],System.Int32,System.Byte[],System.Int32,System.Int32)">
            <Messages>
             <Message Id="Cpy" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-03-29 21:34:48Z">
              <Issue Name="Member">
               <Item>Cpy</Item>
               <Item>'HashSupport.MemCpy(byte[], int, byte[], int, int)'</Item>
              </Issue>
             </Message>
             <Message Id="Mem" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-03-29 21:34:48Z">
              <Issue Name="Member">
               <Item>Mem</Item>
               <Item>'HashSupport.MemCpy(byte[], int, byte[], int, int)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#MemCpy(System.UInt32[],System.Int32,System.Byte[],System.Int32,System.Int32)">
            <Messages>
             <Message Id="Cpy" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-03-29 21:34:48Z">
              <Issue Name="Member">
               <Item>Cpy</Item>
               <Item>'HashSupport.MemCpy(uint[], int, byte[], int, int)'</Item>
              </Issue>
             </Message>
             <Message Id="Mem" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-03-29 21:34:48Z">
              <Issue Name="Member">
               <Item>Mem</Item>
               <Item>'HashSupport.MemCpy(uint[], int, byte[], int, int)'</Item>
              </Issue>
             </Message>
             <Message Id="offsetInput" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2013-03-29 21:34:48Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'offsetInput'</Item>
               <Item>'HashSupport.MemCpy(uint[], int, byte[], int, int)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#MemCpyEx(System.UInt32[],System.Int32,System.Byte[],System.Int32,System.Int32)">
            <Messages>
             <Message Id="Cpy" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-03-29 21:34:48Z">
              <Issue Name="Member">
               <Item>Cpy</Item>
               <Item>'HashSupport.MemCpyEx(uint[], int, byte[], int, int)'</Item>
              </Issue>
             </Message>
             <Message Id="Mem" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-03-29 21:34:48Z">
              <Issue Name="Member">
               <Item>Mem</Item>
               <Item>'HashSupport.MemCpyEx(uint[], int, byte[], int, int)'</Item>
              </Issue>
             </Message>
             <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2013-03-29 21:34:48Z">
              <Issue Name="MemberNewerVersion">
               <Item>Ex</Item>
               <Item>'HashSupport.MemCpyEx(uint[], int, byte[], int, int)'</Item>
              </Issue>
             </Message>
             <Message Id="offsetInput" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2013-03-29 21:34:48Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'offsetInput'</Item>
               <Item>'HashSupport.MemCpyEx(uint[], int, byte[], int, int)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#MemSet(System.Byte[],System.Byte,System.Int32)">
            <Messages>
             <Message Id="Mem" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-03-29 21:34:48Z">
              <Issue Name="Member">
               <Item>Mem</Item>
               <Item>'HashSupport.MemSet(byte[], byte, int)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#RotateLeft(System.UInt32,System.Byte)">
            <Messages>
             <Message Id="n" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-03-29 21:34:48Z">
              <Issue Name="MemberParameterMoreMeaningfulName">
               <Item>'HashSupport.RotateLeft(uint, byte)'</Item>
               <Item>'n'</Item>
              </Issue>
             </Message>
             <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-03-29 21:34:48Z">
              <Issue Name="MemberParameterMoreMeaningfulName">
               <Item>'HashSupport.RotateLeft(uint, byte)'</Item>
               <Item>'x'</Item>
              </Issue>
             </Message>
             <Message Id="32-n" TypeName="OperationsShouldNotOverflow" Category="Microsoft.Usage" CheckId="CA2233" Created="2013-03-29 21:34:48Z">
              <Issue>
               <Item>32-n</Item>
               <Item>'HashSupport.RotateLeft(uint, byte)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#RotateRight(System.UInt32,System.Byte)">
            <Messages>
             <Message Id="n" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-03-29 21:34:48Z">
              <Issue Name="MemberParameterMoreMeaningfulName">
               <Item>'HashSupport.RotateRight(uint, byte)'</Item>
               <Item>'n'</Item>
              </Issue>
             </Message>
             <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-03-29 21:34:48Z">
              <Issue Name="MemberParameterMoreMeaningfulName">
               <Item>'HashSupport.RotateRight(uint, byte)'</Item>
               <Item>'x'</Item>
              </Issue>
             </Message>
             <Message Id="32-n" TypeName="OperationsShouldNotOverflow" Category="Microsoft.Usage" CheckId="CA2233" Created="2013-03-29 21:34:48Z">
              <Issue>
               <Item>32-n</Item>
               <Item>'HashSupport.RotateRight(uint, byte)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="PaddingMode">
          <Members>
           <Member Name="#ANSIX923">
            <Messages>
             <Message Id="ANSIX" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2013-03-29 21:34:48Z">
              <Issue Name="Member">
               <Item>ANSIX</Item>
               <Item>'PaddingMode.ANSIX923'</Item>
               <Item>Ansix</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ISO10126">
            <Messages>
             <Message Id="ISO" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2013-03-29 21:34:48Z">
              <Issue Name="Member">
               <Item>ISO</Item>
               <Item>'PaddingMode.ISO10126'</Item>
               <Item>Iso</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#PKCS7">
            <Messages>
             <Message Id="PKCS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2013-03-29 21:34:48Z">
              <Issue Name="Member">
               <Item>PKCS</Item>
               <Item>'PaddingMode.PKCS7'</Item>
               <Item>Pkcs</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="XCRC">
          <Messages>
           <Message Id="XCRC" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2013-03-29 21:34:48Z">
            <Issue Name="Type">
             <Item>XCRC</Item>
             <Item>'XCRC'</Item>
             <Item>Xcrc</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#.cctor()">
            <Messages>
             <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Created="2013-03-29 21:34:48Z">
              <Issue>
               <Item>'XCRC'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Tethys.Silverlight.Diagnostics">
        <Types>
         <Type Name="AppErrorWindow">
          <Members>
           <Member Name="#RemoveControlBoxes()">
            <Messages>
             <Message Id="Tethys.Silverlight.Helper.NativeMethods.SetWindowLong(System.IntPtr,System.Int32,System.Int32)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Created="2015-01-04 15:29:10Z">
              <Issue Name="HResultOrErrorCode">
               <Item>'AppErrorWindow.RemoveControlBoxes()'</Item>
               <Item>'NativeMethods.SetWindowLong(IntPtr, int, int)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ExceptionInformation">
          <Members>
           <Member Name="#GetClassNameFromStack(System.String)">
            <Messages>
             <Message Id="System.String.LastIndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-03-29 21:34:48Z">
              <Issue>
               <Item>'string.LastIndexOf(string)'</Item>
               <Item>'ExceptionInformation.GetClassNameFromStack(string)'</Item>
               <Item>'string.LastIndexOf(string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ToString()">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-03-29 21:34:48Z">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, params object[])'</Item>
               <Item>'ExceptionInformation.ToString()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Tethys.Silverlight.Extensions">
        <Types>
         <Type Name="DependencyObjectExtensions">
          <Members>
           <Member Name="#GetParent`1(System.Windows.DependencyObject)">
            <Messages>
             <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2013-03-29 21:34:48Z">
              <Issue Name="Local">
               <Item>'dependencyObject'</Item>
               <Item>'T'</Item>
               <Item>'DependencyObjectExtensions.GetParent&lt;T&gt;(this DependencyObject)'</Item>
               <Item>isint</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="FrameworkElementExtensions">
          <Members>
           <Member Name="#GetParentWindow(System.Windows.FrameworkElement)">
            <Messages>
             <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2013-03-29 21:34:48Z">
              <Issue Name="Local">
               <Item>'tp'</Item>
               <Item>'Window'</Item>
               <Item>'FrameworkElementExtensions.GetParentWindow(this FrameworkElement)'</Item>
               <Item>isint</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Tethys.Silverlight.Helper">
        <Types>
         <Type Name="NativeMethods">
          <Members>
           <Member Name="#GetWindowLong(System.IntPtr,System.Int32)">
            <Messages>
             <Message Id="long" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2015-01-04 15:29:10Z">
              <Issue Name="LanguageSpecificMember">
               <Item>Long</Item>
               <Item>'NativeMethods.GetWindowLong(IntPtr, int)'</Item>
              </Issue>
             </Message>
             <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Created="2015-01-04 15:29:10Z">
              <Issue>
               <Item>'NativeMethods.GetWindowLong(IntPtr, int)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SendMessage(System.IntPtr,System.UInt32,System.IntPtr,System.IntPtr)">
            <Messages>
             <Message Id="Param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2015-01-04 15:32:11Z">
              <Issue Name="MemberParameter">
               <Item>'NativeMethods.SendMessage(IntPtr, uint, IntPtr, IntPtr)'</Item>
               <Item>Param</Item>
               <Item>'lParam'</Item>
              </Issue>
              <Issue Name="MemberParameter">
               <Item>'NativeMethods.SendMessage(IntPtr, uint, IntPtr, IntPtr)'</Item>
               <Item>Param</Item>
               <Item>'wParam'</Item>
              </Issue>
             </Message>
             <Message Id="l" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2015-01-04 15:32:11Z">
              <Issue Name="MemberParameter">
               <Item>'NativeMethods.SendMessage(IntPtr, uint, IntPtr, IntPtr)'</Item>
               <Item>l</Item>
               <Item>'lParam'</Item>
              </Issue>
             </Message>
             <Message Id="w" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2015-01-04 15:32:11Z">
              <Issue Name="MemberParameter">
               <Item>'NativeMethods.SendMessage(IntPtr, uint, IntPtr, IntPtr)'</Item>
               <Item>w</Item>
               <Item>'wParam'</Item>
              </Issue>
             </Message>
             <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Created="2015-01-04 15:32:11Z">
              <Issue>
               <Item>'NativeMethods.SendMessage(IntPtr, uint, IntPtr, IntPtr)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Seticon">
            <Messages>
             <Message Id="Seticon" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2015-01-04 15:34:03Z">
              <Issue Name="Member">
               <Item>Seticon</Item>
               <Item>'NativeMethods.Seticon'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SetWindowLong(System.IntPtr,System.Int32,System.Int32)">
            <Messages>
             <Message Id="long" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2015-01-04 15:29:10Z">
              <Issue Name="LanguageSpecificMember">
               <Item>Long</Item>
               <Item>'NativeMethods.SetWindowLong(IntPtr, int, int)'</Item>
              </Issue>
              <Issue Name="LanguageSpecificMemberParameter">
               <Item>'NativeMethods.SetWindowLong(IntPtr, int, int)'</Item>
               <Item>Long</Item>
               <Item>'newLong'</Item>
              </Issue>
             </Message>
             <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Created="2015-01-04 15:29:10Z">
              <Issue>
               <Item>'NativeMethods.SetWindowLong(IntPtr, int, int)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SetWindowPos(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32)">
            <Messages>
             <Message TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414" Created="2015-01-04 15:32:11Z">
              <Issue Name="Return">
               <Item>'NativeMethods.SetWindowPos(IntPtr, IntPtr, int, int, int, int, uint)'</Item>
              </Issue>
             </Message>
             <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Created="2015-01-04 15:32:11Z">
              <Issue>
               <Item>'NativeMethods.SetWindowPos(IntPtr, IntPtr, int, int, int, int, uint)'</Item>
              </Issue>
             </Message>
             <Message Id="flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Created="2015-01-04 15:32:11Z">
              <Issue Name="MemberParameterNoAlternate">
               <Item>'NativeMethods.SetWindowPos(IntPtr, IntPtr, int, int, int, int, uint)'</Item>
               <Item>flags</Item>
               <Item>'flags'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SwpFramechanged">
            <Messages>
             <Message Id="Framechanged" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2015-01-04 15:32:11Z">
              <Issue Name="Member">
               <Item>Framechanged</Item>
               <Item>'NativeMethods.SwpFramechanged'</Item>
              </Issue>
             </Message>
             <Message Id="Swp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2015-01-04 15:32:11Z">
              <Issue Name="Member">
               <Item>Swp</Item>
               <Item>'NativeMethods.SwpFramechanged'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Tethys.Silverlight.MVVM">
        <Types>
         <Type Name="DelegateCommand">
          <Members>
           <Member Name="#RaiseCanExecuteChanged()">
            <Messages>
             <Message TypeName="UseEventsWhereAppropriate" Category="Microsoft.Design" CheckId="CA1030" Created="2013-03-29 21:34:48Z">
              <Issue>
               <Item>'DelegateCommand.RaiseCanExecuteChanged()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#System.Windows.Input.ICommand.CanExecute(System.Object)">
            <Messages>
             <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Created="2013-03-29 21:34:48Z">
              <Issue>
               <Item>'DelegateCommand'</Item>
               <Item>'ICommand.CanExecute(object)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="DelegateCommandEx">
          <Messages>
           <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Created="2015-01-04 15:00:05Z">
            <Issue Name="TypeNewerVersion">
             <Item>Ex</Item>
             <Item>'DelegateCommandEx'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="ViewModelBase">
          <Members>
           <Member Name="#OnPropertyChanged(System.String)">
            <Messages>
             <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Created="2015-01-04 15:00:05Z">
              <Issue>
               <Item>'ViewModelBase.OnPropertyChanged(string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#RaisePropertyChanged(System.String)">
            <Messages>
             <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Created="2015-01-04 15:00:05Z">
              <Issue>
               <Item>'ViewModelBase.RaisePropertyChanged(string)'</Item>
              </Issue>
             </Message>
             <Message TypeName="UseEventsWhereAppropriate" Category="Microsoft.Design" CheckId="CA1030" Created="2013-03-29 21:34:48Z">
              <Issue>
               <Item>'ViewModelBase.RaisePropertyChanged(string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Tethys.Silverlight.Resources">
        <Types>
         <Type Name="SharedResourceDictionary">
          <Members>
           <Member Name="#IsInDesignMode">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2015-01-04 15:00:05Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'SharedResourceDictionary.IsInDesignMode'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SharedDictionaries">
            <Messages>
             <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Created="2015-01-04 15:00:05Z">
              <Issue>
               <Item>'SharedResourceDictionary.SharedDictionaries'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Tethys.Silverlight.Support">
        <Types>
         <Type Name="DialogHelper">
          <Members>
           <Member Name="#UpdateStyle(System.Windows.Window)">
            <Messages>
             <Message Id="Tethys.Silverlight.Helper.NativeMethods.SetWindowLong(System.IntPtr,System.Int32,System.Int32)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Created="2015-01-04 15:32:11Z">
              <Issue Name="HResultOrErrorCode">
               <Item>'DialogHelper.UpdateStyle(Window)'</Item>
               <Item>'NativeMethods.SetWindowLong(IntPtr, int, int)'</Item>
              </Issue>
              <Issue Name="HResultOrErrorCode">
               <Item>'DialogHelper.UpdateStyle(Window)'</Item>
               <Item>'NativeMethods.SetWindowLong(IntPtr, int, int)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
      </Namespaces>
     </Module>
    </Modules>
   </Target>
  </Targets>
  <Notes>
   <User Name="Thomas">
    <Note Id="0" Modified="2013-03-29 21:35:28Z">WPF is an offical name...</Note>
    <Note Id="2" Modified="2013-03-29 21:52:27Z">We might get more members.</Note>
   </User>
  </Notes>
  <Rules>
   <Rule TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020">
    <Resolution Name="Default">Consider merging the types defined in '{0}' with another namespace.</Resolution>
   </Rule>
   <Rule TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227">
    <Resolution Name="Default">Change {0} to be read-only by removing the property setter.</Resolution>
   </Rule>
   <Rule TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702">
    <Resolution Name="MemberShouldBeCompoundWord">The discrete term '{0}' in member name {1} should be expressed as a compound word, '{2}'.</Resolution>
   </Rule>
   <Rule TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026">
    <Resolution Name="Default">Replace method {0} with an overload that supplies all default arguments.</Resolution>
   </Rule>
   <Rule TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800">
    <Resolution Name="Local">{0}, a variable, is cast to type {1} multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction.</Resolution>
    <Resolution Name="Parameter">{0}, a parameter, is cast to type {1} multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction.</Resolution>
   </Rule>
   <Rule TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806">
    <Resolution Name="HResultOrErrorCode">{0} calls {1} but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Resolution>
   </Rule>
   <Rule TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004">
    <Resolution Name="Default">Consider a design where {0} doesn't require explicit type parameter {1} in any call to it.</Resolution>
   </Rule>
   <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
    <Resolution Name="Assembly">Correct the casing of '{0}' in assembly name {1} by changing it to '{2}'.</Resolution>
    <Resolution Name="Member">Correct the casing of '{0}' in member name {1} by changing it to '{2}'.</Resolution>
    <Resolution Name="Namespace">Correct the casing of '{0}' in namespace name '{1}' by changing it to '{2}'.</Resolution>
    <Resolution Name="Type">Correct the casing of '{0}' in type name {1} by changing it to '{2}'.</Resolution>
   </Rule>
   <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
    <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
    <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
    <Resolution Name="MemberParameterMoreMeaningfulName">In method {0}, consider providing a more meaningful name than parameter name {1}.</Resolution>
   </Rule>
   <Rule TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720">
    <Resolution Name="LanguageSpecificMember">Consider replacing the language-specific data type identifier '{0}' in member name {1} with either a language-independent equivalent or a more generic term, such as 'value'.</Resolution>
    <Resolution Name="LanguageSpecificMemberParameter">In member {0}, consider replacing the language-specific data type identifier '{1}' in parameter name {2} with a more generic term, such as 'value'.</Resolution>
   </Rule>
   <Rule TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711">
    <Resolution Name="MemberNewerVersion">Either replace the suffix '{0}' in member name {1} with the suggested numeric alternate '2' or provide a more meaningful suffix that distinguishes it from the member it replaces.</Resolution>
    <Resolution Name="TypeNewerVersion">Either replace the suffix '{0}' in type name {1} with the suggested numeric alternate '2' or provide a more meaningful suffix that distinguishes it from the type it replaces.</Resolution>
   </Rule>
   <Rule TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810">
    <Resolution Name="Default">Initialize all static fields in {0} when those fields are declared and remove the explicit static constructor.</Resolution>
   </Rule>
   <Rule TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033">
    <Resolution Name="Default">Make {0} sealed (a breaking change if this class has previously shipped), implement the method non-explicitly, or implement a new method that exposes the functionality of {1} and is visible to derived classes.</Resolution>
   </Rule>
   <Rule TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824">
    <Resolution Name="Default">Because assembly {0} contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Resolution>
   </Rule>
   <Rule TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414">
    <Resolution Name="Return">Add the MarshalAsAttribute to the return type of P/Invoke {0}. If the corresponding unmanaged return type is a 4-byte Win32 'BOOL', use MarshalAs(UnmanagedType.Bool). For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1).</Resolution>
   </Rule>
   <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
    <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   </Rule>
   <Rule TypeName="OperationsShouldNotOverflow" Category="Microsoft.Usage" CheckId="CA2233">
    <Resolution Name="Default">Correct the potential overflow in the operation '{0}' in {1}.</Resolution>
   </Rule>
   <Rule TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401">
    <Resolution Name="Default">Change the accessibility of P/Invoke {0} so that it is no longer visible from outside its assembly.</Resolution>
   </Rule>
   <Rule TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721">
    <Resolution Name="SameType">The property name {0} is confusing given the existence of method {1}. Rename or remove one of these members.</Resolution>
   </Rule>
   <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
    <Resolution Name="Default">Parameter {0} of {1} is never used. Remove the parameter or use it in the method body.</Resolution>
   </Rule>
   <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
    <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   </Rule>
   <Rule TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307">
    <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Resolution>
   </Rule>
   <Rule TypeName="UseEventsWhereAppropriate" Category="Microsoft.Design" CheckId="CA1030">
    <Resolution Name="Default">Consider making {0} an event.</Resolution>
   </Rule>
   <Rule TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726">
    <Resolution Name="MemberParameterNoAlternate">In member {0}, replace the term '{1}' in parameter name {2} with an appropriate alternate or remove it entirely.</Resolution>
   </Rule>
   <Rule TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024">
    <Resolution Name="Default">Change {0} to a property if appropriate.</Resolution>
   </Rule>
  </Rules>
 </FxCopReport>
</FxCopProject>
